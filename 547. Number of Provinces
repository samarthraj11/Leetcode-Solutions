class Solution {
public:
    
    
    void dfs_adj(vector<int> v[],int x,vector<int> &vis)
    {
        vis[x] = 1;
        for(int i:v[x])
        {
            if(!vis[i])
            {
                dfs_adj(v,i,vis);
            }
        }
        
        
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        
        
        int n = isConnected.size();
        vector<int> v[n];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(isConnected[i][j] == 1)
                {
                    v[i].push_back(j);
                    v[j].push_back(i);
                }
            }
        }
        int cnt = 0;
        vector<int> vis(1000,0);
        for(int i=0;i<n;i++)
        {
            if(vis[i] == 0)
            {
                cnt++;
                dfs_adj(v,i,vis);
            }
        }
        
        return cnt;
        
        
        
    }
};
