class Bitset {
public:
    int o = 0, z = 0, allFlip = 0;
    int a[100005] = {0};
    string s;
    Bitset(int size) {
        for(int i=0;i<size;i++)
        {
            s.push_back('0');
        }
         z = size;
        
    }
    
    void fix(int idx) {
        if((allFlip + a[idx])%2 == 0)
        {
            o++;
            z--;
            a[idx]++;
        }
        
        
    }
    
    void unfix(int idx) {
        if((allFlip + a[idx])%2 != 0)
        {
            o--;
            z++;
            a[idx]++;
        }
        
    }
    
    void flip() {
        allFlip++;
        swap(o,z);
        
    }
    
    bool all() {
        if(o == s.size())
        {
            return true;
        }
        return false;
        
    }
    
    bool one() {
        if(o > 0)
        {
            return true;
        }
        return false;
        
    }
    
    int count() {
        return o;
        
    }
    
    string toString() {
        string ans;
        for(int i=0;i<s.size();i++)
        {
            if((allFlip + a[i])%2 ==0)
            {
                ans.push_back('0');
            }
            else
            {
                ans.push_back('1');
            }
        }
        
        return ans;
        
        
        
        
    }
};

/**
 * Your Bitset object will be instantiated and called as such:
 * Bitset* obj = new Bitset(size);
 * obj->fix(idx);
 * obj->unfix(idx);
 * obj->flip();
 * bool param_4 = obj->all();
 * bool param_5 = obj->one();
 * int param_6 = obj->count();
 * string param_7 = obj->toString();
 */
