class Solution {
public:
    
    int solve_krde_bro(vector<int> v)
    {
        int n = v.size();
        if(n == 0)
        {
            return 0;
        }
        if(n == 1)
        {
            return v[0];
        }
        if(n == 2)
        {
            return max(v[0],v[1]);
        }
        
        
        int dp[n];
        memset(dp,0,sizeof(dp));
        dp[0] = v[0];
        dp[1] = v[1];
        
        for(int i=2;i<n;i++)
        {
            
            for(int j=0;j<i-1;j++)
            {
                dp[i] = max(dp[j] + v[i],dp[i]);
            }
            
            
        }
        
        return *max_element(dp,dp+n);
    }
    int rob(vector<int>& nums) {
        
        int n = nums.size();
        if(n == 1)
        {
            return nums[0];
        }
        vector<int> a,b;
        for(int i=1;i<n;i++)
        {
            a.push_back(nums[i]);
        }
        for(int i=0;i<n-1;i++)
        {
            b.push_back(nums[i]);
        }
        
        return max(solve_krde_bro(a),solve_krde_bro(b));
        
        
        
    }
};
